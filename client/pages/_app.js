import "../styles/globals.css"
import Head from "next/head"
import { store } from "../store/store"
import { Provider, useDispatch, useSelector } from "react-redux"
import { setUser, clearUser, fetchUserStart, fetchUserSuccess, fetchUserFailure } from "../store/slices/userSlice"
import { useEffect } from "react"
import { useSession, SessionProvider } from "next-auth/react"
import { getUserDataAPI } from "../services/apiService.js/apiService"

export function App({ Component, pageProps }) {
  const dispatch = useDispatch()
  const { data: session, status } = useSession()

  useEffect(() => {
      if (status === 'authenticated' && session?.user) {
          dispatch(setUser(session.user))   // Set user in Redux on successful login
          async function fetchUserData (id) {
            try {
              dispatch( fetchUserStart() )  
              const userData = await getUserDataAPI(id)
              if (userData) {
                dispatch( fetchUserSuccess(userData) )
              } else {
                dispatch( fetchUserFailure("No data") )
              }
              return userData
            } catch (error) {
              console.error("Fetching data failed:", error)
              dispatch( fetchUserFailure(error) )
              return null
            }
          }
          fetchUserData (session.user?.id)
      } else {
          dispatch(clearUser()) // Clear user data if not authenticated
      }
  }, [session, status])


  return <>
    <Head>
      <title>Campus Talk</title>
      <meta name="description" content="Generated by create next app" />
      <meta name="viewport" content="width=device-width, initial-scale=1" />
      <link rel="icon" href="/favicon.ico" />
    </Head>
    <Component {...pageProps} />
  </>
}

export default function AppWrapper(props) {
  return (
  <SessionProvider session={props.pageProps.session}>
    <Provider store={store}>
      <App {...props} />
    </Provider>
  </SessionProvider>
  )
}
